# Core Development Principles

## Type Safety & Architecture

- **ALWAYS ensure type safety**: Never use `type: any` unless absolutely necessary
- **Create proper interfaces**: When building APIs, responses, or components, define interfaces in the appropriate shared types folders, not in the same file
- **Modular architecture**: Split reusable components, utilities, and logic into separate modules for better loading speed and reduced complexity

## Code Quality Standards

- **Simplicity first**: LESS COMPLEXITY IS BETTER - fewer lines and simpler logic are always preferred
- **Naming convention**: Use kebab-case (lower-case-like-this) for all files, components, and variables
- **Mobile-first design**: Always consider mobile responsiveness when working on UI tasks or changes

## Dependencies & Tools

- **Package manager**: ALWAYS use Bun, never npm or pnpm
- **Date handling**: Use Dayjs exclusively, never date-fns
- **Data fetching**: Use Tanstack Query for hooks, never SWR
- **Icons**: Use Phosphor icons only, never Lucide
  - Default import: `import { CaretIcon } from '@phosphor-icons/react'` (not `as Caret`)
  - Most icons: `width="duotone"`
  - Arrow icons: `fill`
  - Plus icons: no width attribute needed

## React Best Practices

- **Component architecture**: Decouple state management, data transformations, and API interactions from React lifecycle
- **Data flow**: Simplify to eliminate prop drilling and callback hell
- **Modularity**: Prioritize modularity and testability in all components
- **useEffect**: Almost NEVER use useEffect unless it's critical for the component's core functionality
- **Error boundaries**: ALWAYS implement error boundaries properly

## Data & State Management

- **Complex transformations**: Handle complex data transformations independently of React components
- **Server actions**: Never throw errors in server actions; use try-catch and return errors to the client
- **Debugging**: Use `JSON.stringify()` when adding debugging output
- **Console usage**: Use appropriate console methods: `console.error`, `console.time`, `console.json`, `console.table`, etc.

## Content & UX

- **TL;DR sections**: For all blogs and content pages, add TL;DR summaries near the title for better conversion
- **No mock data**: NEVER add placeholders, mock data, or similar temporary content
- **UI consistency**: Always use `rounded` class, never `rounded-xl` or `rounded-md`

## File Organization

- **Shared types**: Place interfaces and types in appropriate shared folders based on their scope
- **Component splitting**: Extract reusable logic into separate utility files
- **Import structure**: Use default imports for Phosphor icons with "Icon" suffix

use json.stringify() when adding debugging

Almost NEVER use useEffect unless it's critical
